[gd_resource type="StandardMaterial3D" load_steps=3 format=3 uid="uid://c3ox5otsjpskp"]

[sub_resource type="Shader" id="Shader_kstj6"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture;
uniform vec4 outline_color : source_color;
uniform float outline_width = 2.0;
uniform bool constant_width = true;

void fragment() {
	vec4 pixelatedtext = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec2 pixel_size = 1.0 / VIEWPORT_SIZE;
	ALBEDO = pixelatedtext.rgb;
	for(int y = -1*int(outline_width); y <= 1*int(outline_width); y++)
	for(int x = -1*int(outline_width); x <= 1*int(outline_width); x++)
	{
		vec4 tex = texture(SCREEN_TEXTURE, SCREEN_UV + vec2(float(x),float(y)) * pixel_size );
		if(tex.a == 0.0 && SCREEN_UV.x + float(x) * pixel_size.x < 1.0 && SCREEN_UV.x + float(x) * pixel_size.x > 0.0 && SCREEN_UV.y + float(y) * pixel_size.y < 1.0 && SCREEN_UV.y + float(y) * pixel_size.y > 0.0)
		{
			ALBEDO = outline_color.rgb;
			ALPHA = 1.0;
		}
	}
	
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hylkp"]
render_priority = 0
shader = SubResource("Shader_kstj6")
shader_parameter/outline_color = Color(0, 0, 0, 1)
shader_parameter/outline_width = 2.0
shader_parameter/constant_width = true

[resource]
next_pass = SubResource("ShaderMaterial_hylkp")
albedo_color = Color(1, 0.504012, 0.420964, 1)
